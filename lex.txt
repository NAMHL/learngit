%{
   #include<stdlib.h>
   void yyerror(char*);
   extern void addVar(char*);
   Map sym[100];
%}
%%
[0-9]+ {yylval.iValue=atof(yytext);return NUMBER;}
[0-9]*\.[0-9]+ {yylval.iValue = atof(yytext); return NUMBER;}
[-()<>=+*/;{}] {return *yytext;}
">=" return GE;
"<=" return LE;
"==" return EQ;
"!=" return NE;
"++" return SELFADD;
"--" return SELFMINUS;
"&&" return AND;
"||" return OR;
"begin" return _BEGIN;
"end"   return END;
"while" return WHILE;
"if" return IF;
"else" return ELSE;
"print" return PRINT;
"repeat" return REPEAT;
"until"  return UNTIL;
"for" return FOR;
("{body}"|"{head}")"+"?"-"? {strcpy(yylval.com,yytext);return COMMAND;}
("{lua}"|"{rua}"|"{lla}"|"{rla}"|"{lul}"|"{rul}"|"{lll}"|"{rll}")x?z?"+"?"-"? {strcpy(yylval.com,yytext);return COMMAND;}
"robot" return ROBOT;
"delay" return DELAY;
[a-zA-Z][a-zA-Z0-9]* {addVar(yytext);yylval.sIndex=currentVar;return VARIABLE;}
[\t\n]+ ;
.yyerror("Unknow");
%%
int yywrap(void)
{
   return 1;
}
